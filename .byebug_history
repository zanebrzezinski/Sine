c
@loop.valid?
@loop
exit
@loop.valid?
@loop
exit
duration
src
system("ffmpeg -y -ss #{offset} -i #{src.path} -t #{duration} #{dst.path}")
System.run("ffmpeg -y -ss #{offset} -i #{src.path} -t #{duration} #{dst.path}")
system.run("ffmpeg -y -ss #{offset} -i #{src.path} -t #{duration} #{dst.path}")
Paperclip.run("ffmpeg -y -ss #{offset} -i #{src.path} -t #{duration} #{dst.path}")
Paperclip
c
n
@like
n
c
exit
searchable.all
Searchable.all
User
User.searchable
searchable
PgSearch.multisearch(params[:query]).includes(:searchable)
@search_results
params
c
exit
@search_results
c
exit
@search_results
exit
PgSearch.multisearch("B")
pg_search_documents
pg_search_documents.all
@search_results
exit
@search_results
c
n
c
@loop.valid?
@loop
c
exit
@loop.errors.full_messages
@loop.valid?
@loop
@loop.crop_video(loop_params[:loop_video])
@loop
loop_params[:loop_video]
loop_params
params
@loop = Loop.new
@loop
exit
loop
loop = Loop.new(loop_video: Loop.crop_video(video_params[:loop_video]))
Loop.crop_video(video_params[:loop_video])
video_params[:loop_video]
@loop
c
@loop
c
loop.save!
loop.create!
loop.valid?
loop
loop.author_id = u.id
loop.author
u = User.first
loop.title = ("test")
loop.errors.full_messages
loop.valid?
loop.valid
loop = Loop.new(loop_video: dst)
dst
c
__dirname__
file = File.open("~/Desktop/temp_video.mp4")
self
exit
c
src.tempfile
src.path
File.open(src.tempfile)
src.tempfile
file
file = File.open(src.path)
f
f = File.open(src.path)
File.open(src.path)
src.path
src
c
@loop.valid?
@loop.valid
@loop
c
self.valid?
self.valid
self.loop_video
self
video
video.tempfile = dst
dst
video.tempfile
video
self.loop_video = dst
self
dst
c
v
s
@loop.valid?
@loop
c
exit
@loop.loop_video
@loop.crop_video(loop_params[:loop_video])
@loop.crop_video
@loop.crop_video(loop_params[:loop_video])
@loop.loop_video
c
self.loop_video
loop.loop_video
exit
File.open("~/Desktop/mp4test.mp4")
~/Desktop/mp4test.mp4
File.open(file)
file.class
file
self.loop_video = file
self.loop_video
self
loop
file = File.open(dst)
dst
f
video.class
f.class
f = File.open(dst)
File.open(dst)
dst
dst.class
dst
self.valid?
self.loop_video = video
self
self.valid?
self.loop_video = dst
self
@loop.loop_video = dst
dst.class
video
dst
c
dst
exit
file
file = File.open(dst)
dst
c
@loop.loop_video
@loop.loop_video_file_name
@loop
c
@loop = Loop.new(loop_video: loop)
@loop.loop_video = loop
loop
@loop
loop
loop = @loop.crop_video(loop_params[:loop_video])
l
l = @loop.crop_video(loop_params[:loop_video])
@loop.crop_video(loop_params[:loop_video])
exit
system("ffmpeg -ss 0 -i #{src.path} -t 7 #{dst.pat
dst
system("ffmpeg -ss 0 -i #{src.path} -t 7 #{dst.path}")
System("ffmpeg -ss 0 -i #{src.path} -t 7 #{dst.path}")
Paperclip.run("ffmpeg -ss 0 -i #{src.path} -t 7 #{dst.path}")
Paperclip.run("ffmpeg -ss 0 -i #{src.path} -t 7 #{dst}")
src.path
Paperclip.run("ffmpeg -ss 0 -i #{src} -t 7 #{dst}")
src
Paperclip.run("ffmpeg -ss 0 -i the_new_three_stooges_the_noisy_silent_movie_512kb.mp4 -t 7 #{dst}")
Paperclip.run("ffmpeg -ss #{offset} -i #{src.path} -t #{duration} #{dst}")
dst
Paperclip.run("ffmpeg -ss #{offset} -i #{src.path} -t #{duration} #{dst}")
dst
Paperclip.run("ffmpeg -ss #{offset} -i #{src.path} -t #{duration} #{dst}")
Paperclip.run("ffmpeg -ss #{offset} -i #{src.path} -t #{duration} dst")
success
dst
dst.type
dst
exit
Paperclip.run("ffmpeg -ss #{offset} -t #{duration} -i #{src.path} #{dst.path}")
Paperclip.run("ffmpeg -y -ss #{offset} -t #{duration} -i #{src.path} #{dst.path}")
dst
Paperclip.run("ffmpeg -y -ss #{offset} -t #{duration} -i #{src.path} #{dst.path}")
Paperclip.run("ffmpeg -y -ss #{offset} -t #{duration} -i #{src.path} copy #{dst.path}")
dst
current_format
basename
dst
c
n
c
n
dst.binmode
dst
duration
offset
exit
@basename = File.basename(src.path)
@duration = 7
@offset = 5
src = video
Paperclip.run("ffmpeg -ss 5 -t 7 -i #{video} test.mp4")
Paperclip.run("ffmpeg -ss 5 -t 7 -i {video} test.mp4")
Paperclip.run("ffmpeg -ss 5 -t 7 -i video test.mp4")
video
c
open(self.upload.queued_for_write)
self.upload
self
Paperclip.run("self
self
@file
Paperclip
Paperclip.run("ffmpeg -ss 0 -i woody_woodpecker_pantry_panic_512kb.mp4 -t 7 woody_woodpecker_pantry_panic_512kb.mp4")
self
c
u.loops
u = User.first
@loop.save
@loop.valid?
@loop
n
exit
@loop.save
@loop.valid?
@loop
n
exit
@loop.errors.full_messages
@loop.valid?
@loop = Loop.new(loop_params)
@loop = Loop.new(loop_params
exit
loop.errors.full_messages
